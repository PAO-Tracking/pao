name: Deploy to GitHub Pages

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  # 수동으로도 실행 가능하도록 설정
  workflow_dispatch:

# GITHUB_TOKEN의 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시 배포 방지
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run typecheck

      - name: Build for GitHub Pages (Static)
        run: npm run build:static
        env:
          NODE_ENV: production
          PUBLIC_URL: /

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build/client

  # GitHub Pages에 배포
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    # main/master 브랜치에서만 배포
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # PR에 대해서는 빌드만 테스트
  test-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Test static build
        run: npm run build:static
        env:
          NODE_ENV: production

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ GitHub Pages 정적 빌드가 성공적으로 완료되었습니다!'
            })

  # SEO 및 성능 검사 (배포 후)
  lighthouse-check:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 30

      - name: Run Lighthouse CI for GitHub Pages
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://${{ github.repository_owner }}.github.io/
          configPath: '.github/lighthouse/lighthouserc-pages.json'
          uploadArtifacts: false
          temporaryPublicStorage: true
