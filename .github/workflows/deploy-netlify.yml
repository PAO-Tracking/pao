name: Deploy to Netlify

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run typecheck

      - name: Run tests (if available)
        run: npm run test --if-present || echo "No tests found"

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production

      - name: Check Netlify Secrets
        id: check-netlify
        run: |
          if [ -z "${{ secrets.NETLIFY_AUTH_TOKEN }}" ] || [ -z "${{ secrets.NETLIFY_SITE_ID }}" ]; then
            echo "netlify-configured=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Netlify secrets not configured. Skipping Netlify deployment."
            echo "To enable Netlify deployment, set the following secrets in Repository Settings:"
            echo "- NETLIFY_AUTH_TOKEN"
            echo "- NETLIFY_SITE_ID"
          else
            echo "netlify-configured=true" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Netlify (Production)
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && steps.check-netlify.outputs.netlify-configured == 'true'
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './build/client'
          production-branch: 'main'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions - ${{ github.sha }}'
          netlify-config-path: './netlify.toml'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deploy to Netlify (Preview)
        if: github.event_name == 'pull_request' && steps.check-netlify.outputs.netlify-configured == 'true'
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './build/client'
          production-branch: 'main'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy Preview from GitHub Actions - PR #${{ github.event.number }}'
          netlify-config-path: './netlify.toml'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Netlify Deployment Skipped
        if: steps.check-netlify.outputs.netlify-configured == 'false'
        run: |
          echo "‚úÖ Build completed successfully!"
          echo "üöÄ To enable Netlify deployment:"
          echo "1. Go to Repository Settings ‚Üí Secrets and variables ‚Üí Actions"
          echo "2. Add the following secrets:"
          echo "   - NETLIFY_AUTH_TOKEN: Get from https://app.netlify.com/user/applications#personal-access-tokens"
          echo "   - NETLIFY_SITE_ID: Get from Site settings ‚Üí General ‚Üí Site information"
          echo "3. Push to trigger automatic deployment"

  seo-check:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if Netlify deployment succeeded
        id: check-deployment
        run: |
          # Netlify secretsÍ∞Ä ÏûàÎäîÏßÄ ÌôïÏù∏
          if [ -z "${{ secrets.NETLIFY_AUTH_TOKEN }}" ]; then
            echo "seo-check-enabled=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Netlify deployment was skipped, SEO check will also be skipped."
          else
            echo "seo-check-enabled=true" >> $GITHUB_OUTPUT
          fi

      - name: SEO and Accessibility Check
        if: steps.check-deployment.outputs.seo-check-enabled == 'true'
        uses: foo-software/lighthouse-check-action@master
        with:
          urls: 'https://p-a-o.com'
          prCommentEnabled: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: SEO Check Skipped
        if: steps.check-deployment.outputs.seo-check-enabled == 'false'
        run: |
          echo "‚ö†Ô∏è SEO check skipped because Netlify deployment was not configured."
          echo "üí° Set up Netlify secrets to enable automatic SEO monitoring."
